user daemon;
daemon off;
master_process off;
worker_processes 1;
error_log stderr notice;

events {
    worker_connections  1024;
}

http {

    # Create redis connection object at startup,
    # and set it into user-data object
    mruby_init_code '
        userdata = Userdata.new "redis_data_key"
        userdata.redis = Redis.new "acme-proxy.9gybd6.ng.0001.apne1.cache.amazonaws.com", 6379
    ';

    server {
        listen       7777;
        location / {
            mruby_content_handler_code 'Nginx.echo "port 7777 contents"';
        }
    }

    server {
        listen       57777;
        
        location /block {
            mruby_set_code $maint '
              userdata = Userdata.new "redis_data_key"
              redis = userdata.redis
              redis.set "ngx_maint", "TRUE"
          ';
          mruby_content_handler_code 'Nginx.echo "ok"';
        }
        location /unblock {
            mruby_set_code $maint '
              userdata = Userdata.new "redis_data_key"
              redis = userdata.redis
              redis.set "ngx_maint", "FALSE"
          ';
          mruby_content_handler_code 'Nginx.echo "ok"';
        }

        location /mruby {
          mruby_set_code $maint '
              userdata = Userdata.new "redis_data_key"
              redis = userdata.redis
              redis.get "ngx_maint"
          ';
          if ($maint = "TRUE") {
            mruby_content_handler_code '
                Nginx.echo JSON::stringify({"result"=>"ERR", "time"=>Time.now.to_i})
            ';
          }
          if ($maint != "TRUE") {
             proxy_pass   http://127.0.0.1:7777;
          }
        }
    }

    server {
        listen 80;
        
        location /async_sleep_loop {
            mruby_rewrite_handler_code '
              5.times do |s|
                Nginx::Async.sleep 500
                Nginx.rputs s
              end
              Nginx.return Nginx::HTTP_OK
            ';
        }

        location /mruby-hello {
            mruby_content_handler_code 'Nginx.echo "server ip: #{Nginx::Connection.new.local_ip}: hello ngx_mruby world."';
        }

        location /mruby-test {
            mruby_content_handler /usr/local/nginx/hook/test.rb;
        }
        
        location /mruby-markdown {
            mruby_content_handler /usr/local/nginx/hook/markdown.rb;
        }

        location / {
            resolver 8.8.8.8;
            mruby_set_code $backend '["blog.matsumoto-r.jp", "hb.matsumoto-r.jp"][rand(2)]';
            proxy_pass http://$backend;
        }
    }
}

